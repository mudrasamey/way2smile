{"version":3,"sources":["../src/withHTML.ts","../src/constants.ts","../src/preview.ts"],"names":["useChannel","ADDON_ID","PANEL_ID","EVENTS","withHTML","storyFn","parameters","emit","rootSelector","root","code","removeEmptyComments","removeComments","transform","match","p1","e","preview","preview_default"],"mappings":"AAAA,OAAS,cAAAA,MAAkB,iCCApB,IAAMC,EAAW,iBACXC,EAAW,GAAGD,CAAQ,SAG5B,IAAME,EAAS,CACpB,YAAa,GAAGF,CAAQ,aAC1B,EDEO,IAAMG,EAAW,CACtBC,EACA,CACE,WAAY,CAAE,KAAMC,EAAa,CAAC,CAAE,EAAI,CAAC,CAC3C,IACG,CACH,IAAMC,EAAOP,EAAW,CAAC,CAAC,EAE1B,kBAAW,IAAM,CACf,IAAMQ,EAAeF,EAAW,MAAQ,yBAClCG,EAAO,SAAS,cAAcD,CAAY,EAC5CE,EAAeD,EAAOA,EAAK,UAAY,GAAGD,CAAY,cACpD,CAAE,oBAAAG,EAAqB,eAAAC,EAAgB,UAAAC,CAAU,EAAIP,EAW3D,GAVIK,IACFD,EAAOA,EAAK,QAAQ,cAAe,EAAE,GAEnCE,IAAmB,GACrBF,EAAOA,EAAK,QAAQ,mBAAoB,EAAE,EACjCE,aAA0B,SACnCF,EAAOA,EAAK,QAAQ,qBAAsB,CAACI,EAAOC,IAChDH,EAAe,KAAKG,CAAE,EAAI,GAAKD,CACjC,GAEE,OAAOD,GAAc,WACvB,GAAI,CACFH,EAAOG,EAAUH,CAAI,CACvB,OAASM,EAAG,CACV,QAAQ,MAAMA,CAAC,CACjB,CAEFT,EAAKJ,EAAO,YAAa,CAAE,KAAAO,EAAM,QAASJ,CAAW,CAAC,CACxD,EAAG,CAAC,EAEGD,EAAQ,CACjB,EEvCA,IAAMY,EAAwC,CAC5C,WAAY,CAACb,CAAQ,CACvB,EAEOc,EAAQD","sourcesContent":["import { useChannel } from \"storybook/internal/preview-api\";\nimport type {\n  Renderer,\n  PartialStoryFn as StoryFunction,\n} from \"storybook/internal/types\";\nimport { EVENTS } from \"./constants\";\nimport { Parameters } from \"./types\";\n\nexport const withHTML = (\n  storyFn: StoryFunction<Renderer>,\n  {\n    parameters: { html: parameters = {} } = {},\n  }: { parameters?: { html?: Parameters } },\n) => {\n  const emit = useChannel({});\n\n  setTimeout(() => {\n    const rootSelector = parameters.root || \"#storybook-root, #root\";\n    const root = document.querySelector(rootSelector);\n    let code: string = root ? root.innerHTML : `${rootSelector} not found.`;\n    const { removeEmptyComments, removeComments, transform } = parameters;\n    if (removeEmptyComments) {\n      code = code.replace(/<!--\\s*-->/g, \"\");\n    }\n    if (removeComments === true) {\n      code = code.replace(/<!--[\\S\\s]*?-->/g, \"\");\n    } else if (removeComments instanceof RegExp) {\n      code = code.replace(/<!--([\\S\\s]*?)-->/g, (match, p1) =>\n        removeComments.test(p1) ? \"\" : match,\n      );\n    }\n    if (typeof transform === \"function\") {\n      try {\n        code = transform(code);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    emit(EVENTS.CODE_UPDATE, { code, options: parameters });\n  }, 0);\n\n  return storyFn();\n};\n","export const ADDON_ID = \"storybook/html\";\nexport const PANEL_ID = `${ADDON_ID}/panel`;\nexport const PARAM_KEY = `html`;\n\nexport const EVENTS = {\n  CODE_UPDATE: `${ADDON_ID}/codeUpdate`,\n};\n","import type { ProjectAnnotations, Renderer } from \"storybook/internal/types\";\nimport { withHTML } from \"./withHTML\";\n\nconst preview: ProjectAnnotations<Renderer> = {\n  decorators: [withHTML],\n};\n\nexport default preview;\n"]}